Object subclass: #AlgoViajes	instanceVariableNames: 'viaje viajes'	classVariableNames: ''	package: 'TP1'!!AlgoViajes methodsFor: 'inicializador' stamp: 'liugutierrez 4/8/2023 22:43'!registrarPasajePara: unNombre deNacionalidad: unaNacionalidad conDestinoACiudad: unDestino delPais: unPais aKms: unaDistancia 	viaje := Viaje de: (Pasajero con: unNombre de: unaNacionalidad) hacia: (CiudadEsperada nombre: unDestino en: unPais) con: unaDistancia.								viajes addLast: viaje.	! !!AlgoViajes methodsFor: 'accessing' stamp: 'liugutierrez 4/10/2023 16:35'!seleccionarViajesDeUnPasajeroCon: unNombre	^ viajes select: [ :each | each pasajero nombre = unNombre ]! !!AlgoViajes methodsFor: 'accessing' stamp: 'liugutierrez 4/10/2023 16:20'!viajeIndicadoSegunCriterioPara: unNombre 	self subclassResponsibility."	| viajesDeUnPasajeroEspecifico |		viajesDeUnPasajeroEspecifico := (viajes select: [:each| ((each pasajero)nombre) = unNombre]).	(criterio = 'Minimo') ifTrue:[^ (viajesDeUnPasajeroEspecifico detectMin: [:a| a calcularTarifa.])] ifFalse:[	^ (viajesDeUnPasajeroEspecifico detectMax: [:a| a calcularTarifa.])]."! !!AlgoViajes methodsFor: 'accessing' stamp: 'liugutierrez 4/8/2023 16:57'!destino	^ viaje destino! !!AlgoViajes methodsFor: 'privado' stamp: 'liugutierrez 4/10/2023 16:17'!initializeConCriterio	viajes := OrderedCollection new.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AlgoViajes class	instanceVariableNames: ''!!AlgoViajes class methodsFor: 'inicializador' stamp: 'liugutierrez 4/10/2023 16:14'!tipoDeCriterio: unCriterio	self subclassResponsibility.! !!AlgoViajes class methodsFor: 'inicializador' stamp: 'liugutierrez 4/10/2023 16:17'!conCriterio: unCriterio	| algoViajeSubclass |		algoViajeSubclass := self subclasses detect: [ : unaSubclaseDeAlgoViaje | unaSubclaseDeAlgoViaje tipoDeCriterio: unCriterio].		^ algoViajeSubclass new initializeConCriterio.! !AlgoViajes subclass: #AlgoViajeCriterioMaximo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!AlgoViajeCriterioMaximo methodsFor: 'accessing' stamp: 'liugutierrez 4/10/2023 16:35'!viajeIndicadoSegunCriterioPara: unNombre	^ (self seleccionarViajesDeUnPasajeroCon: unNombre) detectMax: [ :a | a calcularTarifa ]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AlgoViajeCriterioMaximo class	instanceVariableNames: ''!!AlgoViajeCriterioMaximo class methodsFor: 'as yet unclassified' stamp: 'liugutierrez 4/10/2023 16:15'!tipoDeCriterio: unCriterio	^ unCriterio = 'Maximo'.! !AlgoViajes subclass: #AlgoViajeCriterioMinimo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!AlgoViajeCriterioMinimo methodsFor: 'accessing' stamp: 'liugutierrez 4/10/2023 16:35'!viajeIndicadoSegunCriterioPara: unNombre	| viajesDeUnPasajeroEspecifico |	viajesDeUnPasajeroEspecifico := self 		                                seleccionarViajesDeUnPasajeroCon:		                                unNombre.	^ viajesDeUnPasajeroEspecifico detectMin: [ :a | a calcularTarifa ]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AlgoViajeCriterioMinimo class	instanceVariableNames: ''!!AlgoViajeCriterioMinimo class methodsFor: 'inicializador' stamp: 'liugutierrez 4/10/2023 16:15'!tipoDeCriterio: unCriterio	^ unCriterio = 'Minimo'.! !Object subclass: #Pasajero	instanceVariableNames: 'nombre nacionalidad'	classVariableNames: ''	package: 'TP1'!!Pasajero methodsFor: 'acceso' stamp: 'liugutierrez 4/8/2023 17:40'!nombre	^nombre. ! !!Pasajero methodsFor: 'inicializador' stamp: 'liugutierrez 4/8/2023 11:47'!initializeUnPasajeroLlamado: unNombre de: unaNacionalidad 		nombre := unNombre.	nacionalidad := unaNacionalidad.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pasajero class	instanceVariableNames: ''!!Pasajero class methodsFor: 'inicializador' stamp: 'liugutierrez 4/9/2023 00:21'!con: unNombre de: unaNacionalidad 	| pasajeroSubclass |		pasajeroSubclass := self subclasses detect: [ : unPasajeroSubclass | unPasajeroSubclass tipoDePasajero: unaNacionalidad ].		^pasajeroSubclass new initializeUnPasajeroLlamado: unNombre de: unaNacionalidad.! !!Pasajero class methodsFor: 'inicializador' stamp: 'liugutierrez 4/9/2023 00:23'!tipoDePasajero: unaNacionalidad		self subclassResponsibility! !Pasajero subclass: #PasajeroExtranjero	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PasajeroExtranjero class	instanceVariableNames: ''!!PasajeroExtranjero class methodsFor: 'inicializador' stamp: 'liugutierrez 4/9/2023 00:22'!tipoDePasajero: unaNacionalidad		^ unaNacionalidad ~= 'Argentina'! !Pasajero subclass: #PasajeroNativo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PasajeroNativo class	instanceVariableNames: ''!!PasajeroNativo class methodsFor: 'inicializador' stamp: 'liugutierrez 4/9/2023 00:23'!tipoDePasajero: unaNacionalidad		^ unaNacionalidad = 'Argentina'! !Object subclass: #Viaje	instanceVariableNames: 'destino distancia pasajero tarifaEsperada'	classVariableNames: ''	package: 'TP1'!!Viaje methodsFor: 'accessing' stamp: 'liugutierrez 4/8/2023 17:17'!tarifa	^self calcularTarifa.! !!Viaje methodsFor: 'accessing' stamp: 'liugutierrez 4/8/2023 17:43'!pasajero 	^pasajero.! !!Viaje methodsFor: 'accessing' stamp: 'liugutierrez 4/8/2023 17:14'!destino	^ destino! !!Viaje methodsFor: 'initialization' stamp: 'liugutierrez 4/8/2023 22:45'!initializeUnViajeDe: unPasajero hacia: aCiudadEsperada de: unaDistancia 		pasajero := unPasajero.	destino := aCiudadEsperada.	distancia := unaDistancia.	tarifaEsperada := 0.! !!Viaje methodsFor: 'calculos' stamp: 'liugutierrez 4/9/2023 00:37'!calcularTarifaDePasajeroExtranjero	self subclassResponsibility.! !!Viaje methodsFor: 'calculos' stamp: 'liugutierrez 4/8/2023 23:07'!calcularTarifa	self subclassResponsibility.! !!Viaje methodsFor: 'calculos' stamp: 'liugutierrez 4/9/2023 00:38'!calcularTarifaDePasajeroNativo	self subclassResponsibility.! !!Viaje methodsFor: 'calculos' stamp: 'liugutierrez 4/8/2023 23:06'!impuesto	^ 1.2! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Viaje class	instanceVariableNames: ''!!Viaje class methodsFor: 'inicializadores' stamp: 'liugutierrez 4/8/2023 21:16'!tipoDestino: unDestino	self subclassResponsibility.! !!Viaje class methodsFor: 'inicializadores' stamp: 'liugutierrez 4/8/2023 22:22'!de: unPasajero hacia: unDestino con: unaDistancia 		| viajeSubclass |		viajeSubclass := self subclasses detect: [ : unViajeSubclass | unViajeSubclass tipoDestino: unDestino ].		^viajeSubclass new initializeUnViajeDe: unPasajero hacia: unDestino de: unaDistancia.	! !Viaje subclass: #ViajeDeTarifaInternacional	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!ViajeDeTarifaInternacional methodsFor: 'calculos' stamp: 'liugutierrez 4/9/2023 00:40'!calcularTarifaDePasajeroExtranjero	^ tarifaEsperada := self tarifaBaseViajeInternacional raisedTo: self impuesto ! !!ViajeDeTarifaInternacional methodsFor: 'calculos' stamp: 'liugutierrez 4/9/2023 00:30'!calcularTarifa	(pasajero isKindOf: PasajeroExtranjero)		ifTrue: [ 			^ tarifaEsperada := self tarifaBaseViajeInternacional raisedTo:				                    self impuesto ]		ifFalse: [ 			^ tarifaEsperada := self tarifaBaseViajeInternacional			                    * self impuesto ]! !!ViajeDeTarifaInternacional methodsFor: 'calculos' stamp: 'liugutierrez 4/9/2023 00:41'!calcularTarifaDePasajeroNativo	^ tarifaEsperada := self tarifaBaseViajeInternacional * self impuesto ! !!ViajeDeTarifaInternacional methodsFor: 'calculos' stamp: 'liugutierrez 4/8/2023 22:49'!tarifaBaseViajeInternacional	^ distancia log + 3600! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ViajeDeTarifaInternacional class	instanceVariableNames: ''!!ViajeDeTarifaInternacional class methodsFor: 'inicializadores' stamp: 'liugutierrez 4/8/2023 22:24'!tipoDestino: unDestino	^ unDestino esInternacional ! !Viaje subclass: #ViajeDeTarifaMercosur	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!ViajeDeTarifaMercosur methodsFor: 'calculos' stamp: 'liugutierrez 4/8/2023 22:52'!tarifaBaseParaViajesDentroDeMercosur	^ distancia raisedTo: 1.12! !!ViajeDeTarifaMercosur methodsFor: 'calculos' stamp: 'liugutierrez 4/9/2023 00:31'!calcularTarifa	(pasajero isKindOf: PasajeroExtranjero)		ifTrue: [ 			^ tarifaEsperada := self tarifaBaseParaViajesDentroDeMercosur 				                    raisedTo: self impuesto ]		ifFalse: [ 			^ tarifaEsperada := self tarifaBaseParaViajesDentroDeMercosur			                    * self impuesto ]! !!ViajeDeTarifaMercosur methodsFor: 'calculos' stamp: 'liugutierrez 4/9/2023 00:42'!calcularTarifaDePasajeroNativo	^ tarifaEsperada := self tarifaBaseParaViajesDentroDeMercosur * self impuesto! !!ViajeDeTarifaMercosur methodsFor: 'calculos' stamp: 'liugutierrez 4/9/2023 00:42'!calcularTarifaDePasajeroExtranjero	^ tarifaEsperada := self tarifaBaseParaViajesDentroDeMercosur raisedTo: self impuesto! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ViajeDeTarifaMercosur class	instanceVariableNames: ''!!ViajeDeTarifaMercosur class methodsFor: 'inicializadores' stamp: 'liugutierrez 4/8/2023 22:24'!tipoDestino: unDestino	^ unDestino esMercosur.! !Viaje subclass: #ViajeDeTarifaNacional	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!ViajeDeTarifaNacional methodsFor: 'calculos' stamp: 'liugutierrez 4/9/2023 00:44'!calcularTarifaDePasajeroNativo	^ tarifaEsperada := self tarifaBaseViajeNacional sqrt * self impuesto! !!ViajeDeTarifaNacional methodsFor: 'calculos' stamp: 'liugutierrez 4/9/2023 00:43'!calcularTarifaDePasajeroExtranjero	^ tarifaEsperada := (self tarifaBaseViajeNacional - self descuentoPorExtranjeroYendoADestinoNacional) raisedTo: self impuesto ! !!ViajeDeTarifaNacional methodsFor: 'calculos' stamp: 'liugutierrez 4/8/2023 23:12'!descuentoPorExtranjeroYendoADestinoNacional	^ 1500.! !!ViajeDeTarifaNacional methodsFor: 'calculos' stamp: 'liugutierrez 4/8/2023 22:53'!tarifaBaseViajeNacional	^ distancia * 1.28! !!ViajeDeTarifaNacional methodsFor: 'calculos' stamp: 'liugutierrez 4/9/2023 00:31'!calcularTarifa	(pasajero isKindOf: PasajeroExtranjero)		ifTrue: [ 			^ tarifaEsperada := (self tarifaBaseViajeNacional - self descuentoPorExtranjeroYendoADestinoNacional) raisedTo: self impuesto ]		ifFalse: [ 			^ tarifaEsperada := self tarifaBaseViajeNacional sqrt * self impuesto ]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ViajeDeTarifaNacional class	instanceVariableNames: ''!!ViajeDeTarifaNacional class methodsFor: 'inicializadores' stamp: 'liugutierrez 4/8/2023 22:24'!tipoDestino: unDestino	^unDestino esNacional.! !
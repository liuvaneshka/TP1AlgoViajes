TestCase subclass: #AlgoViajesTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Casos-De-Uso'!!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test03ElViajeMasBaratoParaUnUsuarioExtranjeroDadoUnDestinoSudamericanoYUnoNacionalEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Joaquin' deNacionalidad: 'Española' conDestinoACiudad: 'San Carlos de Bariloche' delPais: 'Argentina' aKms: 1578.	algoViajes registrarPasajePara: 'Joaquin' deNacionalidad: 'Española' conDestinoACiudad: 'Cusco' delPais: 'Peru' aKms: 3236.	tarifaEsperada := ((1578 "Kms" * 1.28 "tarifa destino nacional") - 1500 "Descuento por extranjero yendo a destino nacional"). 	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Joaquin'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'San Carlos de Bariloche' en: 'Argentina').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada	! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test09ElMismoViajeConDestinoSudamericanoResultaMasBaratoParaUnUsuarioArgentino	| algoViajes viajeCaro viajeBarato tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 3247.	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 3247.	tarifaEsperada := (3247 "Kms" raisedTo: 1.12 "tarifa de preembarco a destino mercosur") * 1.2 "Impuesto al viaje para turistas nacionales".		"Act"	viajeCaro := algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'.	viajeBarato :=  algoViajes viajeIndicadoSegunCriterioPara: 'Pablo'.		"Assert"	self assert: viajeBarato tarifa < viajeCaro tarifa.	self assert: (viajeBarato destinoEsperado)  equals: (CiudadEsperada nombre: 'Cuzco' en: 'Peru').	self assert: (viajeBarato tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test19ElViajeMasCaroConDestinoNacionalParaUnUsuarioExtranjero	| algoViajes viajeCaro viajeBarato tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Maximo'.	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.	tarifaEsperada := ((2377 "Kms" * 1.28 "tarifa destino nacional") - 1500 "Descuento por extranjero yendo a destino nacional").	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".		"Act"		viajeBarato :=  algoViajes viajeIndicadoSegunCriterioPara: 'Pablo'.	viajeCaro := algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'.		"Assert"	self assert: viajeBarato tarifa < viajeCaro tarifa.	self assert: (viajeCaro destinoEsperado)  equals: (CiudadEsperada nombre: 'Ushuaia' en: 'Argentina').	self assert: (viajeCaro tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test18ElViajeMasCaroParaUnUsuarioArgentinoHaciaUnDestinoInternacionalEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Maximo'.	algoViajes registrarPasajePara: 'Diego' deNacionalidad: 'Argentina' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.	algoViajes registrarPasajePara: 'Diego' deNacionalidad: 'Argentina' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 1247.	tarifaEsperada := (10215 "Kms" log + 3600 "tarifa de preembarco con destino internacional") * 1.2 "Impuesto al viaje para turistas nacionales".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Diego'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'Lisboa' en: 'Portugal').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/18/2023 02:35'!test20RecibeUnCriterioNoValido	| algoViaje |		self shouldnt: [ algoViaje := AlgoViaje conCriterio: 'Invalido' ] raise: CriterioInvalido.						"	| algoViajes |		self 		should: [ 	algoViajes := AlgoViaje conCriterio: 'Criterio Invalido'. ]		raise: Error - MessageNotUnderstood		withExceptionDo: [ :anException | 						self assert: anException messageText equals: AlgoViaje criterioInvalido.												]"! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test06ElViajeMasBaratoParaUnUsuarioArgentinoHaciaUnDestinoDeSudamericaEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Diego' deNacionalidad: 'Argentina' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 3247.	tarifaEsperada := (3247 "Kms" raisedTo: 1.12 "tarifa de preembarco a destino mercosur") * 1.2 "Impuesto al viaje para turistas nacionales".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Diego'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'Cuzco' en: 'Peru').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test07ElViajeMasBaratoParaUnUsuarioArgentinoHaciaUnDestinoInternacionalEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Diego' deNacionalidad: 'Argentina' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.	tarifaEsperada := (10215 "Kms" log + 3600 "tarifa de preembarco con destino internacional") * 1.2 "Impuesto al viaje para turistas nacionales".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Diego'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'Lisboa' en: 'Portugal').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test17ElViajeMasCaroParaUnUsuarioArgentinoHaciaUnDestinoDeSudamericaEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Maximo'.	algoViajes registrarPasajePara: 'Diego' deNacionalidad: 'Argentina' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 1377.	algoViajes registrarPasajePara: 'Diego' deNacionalidad: 'Argentina' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 3247.	tarifaEsperada := (3247 "Kms" raisedTo: 1.12 "tarifa de preembarco a destino mercosur") * 1.2 "Impuesto al viaje para turistas nacionales".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Diego'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'Cuzco' en: 'Peru').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test08ElMismoViajeConDestinoNacionalResultaMasBaratoParaUnUsuarioArgentino	| algoViajes viajeCaro viajeBarato tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.	tarifaEsperada := ((2377 "Kms" * 1.28 "tarifa destino nacional") sqrt "Descuento por ley de impulso turismo nacional") * 1.2 "Impuesto al viaje para turistas nacionales".		"Act"	viajeCaro := algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'.	viajeBarato :=  algoViajes viajeIndicadoSegunCriterioPara: 'Pablo'.		"Assert"	self assert: viajeBarato tarifa < viajeCaro tarifa.	self assert: (viajeBarato destinoEsperado)  equals: (CiudadEsperada nombre: 'Ushuaia' en: 'Argentina').	self assert: (viajeBarato tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test10ElMismoViajeConDestinoInternacionalResultaMasBaratoParaUnUsuarioNacional	| algoViajes viajeCaro viajeBarato tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.	tarifaEsperada := (10215 "Kms" log + 3600 "tarifa de preembarco con destino internacional")  *1.2 "Impuesto al viaje para turistas nacionales".		"Act"	viajeBarato := algoViajes viajeIndicadoSegunCriterioPara: 'Pablo'.	viajeCaro :=  algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'.		"Assert"	self assert: viajeBarato tarifa < viajeCaro tarifa.	self assert: (viajeBarato destinoEsperado)  equals: (CiudadEsperada nombre: 'Lisboa' en: 'Portugal').	self assert: (viajeBarato tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/18/2023 02:35'!test21RecibeUnDestinoNegativoLevantaExcepcion	| algoViajes viajeObtenido tarifaEsperada |		"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.		self 		should: [ algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: (-2377).	tarifaEsperada := ((2377 "Kms" * 1.28 "tarifa destino nacional") - 1500 "Descuento por extranjero yendo a destino nacional").	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'. ]		raise: Error - MessageNotUnderstood		withExceptionDo: [ :anException | 						self assert: anException messageText equals: Destino distanciaInvalida.												]! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test16ElViajeMasCaroParaUnUsuarioExtranjeroHaciaUnDestinoInternacionalEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Maximo'.	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Munich' delPais: 'Alemania' aKms: 15215.	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.	tarifaEsperada := (15215 "Kms" log + 3600 "tarifa de preembarco con destino internacional")  "No hay descuento de extranjero a viaje internacional".	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".	"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'Munich' en: 'Alemania').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test05ElViajeMasBaratoParaUnUsuarioArgentinoEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.	tarifaEsperada := ((2377 "Kms" * 1.28 "tarifa destino nacional") sqrt "Descuento por ley de impulso turismo nacional") * 1.2 "Impuesto al viaje para turistas nacionales".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Pablo'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'Ushuaia' en: 'Argentina').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test12ElViajeMasBaratoParaUnUsuarioExtranjeroDadoUnDestinoSudamericanoYUnoInternacionalEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.		algoViajes registrarPasajePara: 'Joaquin' deNacionalidad: 'Española' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.	algoViajes registrarPasajePara: 'Joaquin' deNacionalidad: 'Española' conDestinoACiudad: 'Cusco' delPais: 'Peru' aKms: 3236.	tarifaEsperada := (10215 "Kms" log + 3600 "tarifa de preembarco con destino internacional")  "No hay descuento de extranjero a viaje internacional".	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Joaquin'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'Lisboa' en: 'Portugal').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada	! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test14ElViajeMasCaroParaUnUsuarioExtranjeroDadoUnDestinoSudamericanoYUnoNacionalEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Maximo'.	algoViajes registrarPasajePara: 'Joaquin' deNacionalidad: 'Española' conDestinoACiudad: 'San Carlos de Bariloche' delPais: 'Argentina' aKms: 1578.	algoViajes registrarPasajePara: 'Joaquin' deNacionalidad: 'Española' conDestinoACiudad: 'Cusco' delPais: 'Peru' aKms: 3247.	tarifaEsperada := (3247 "Kms" raisedTo: 1.12 "tarifa de preembarco a destino mercosur") "No hay descuento de extranjero a viaje a sudamerica".	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Joaquin'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'Cusco' en: 'Peru').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada.	! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test15ElViajeMasCaroParaUnUsuarioExtranjeroEnTerritorioNacional	| algoViajes viajeObtenido tarifaEsperada |		"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana'  conDestinoACiudad: 'Comodoro Rivadavia' delPais: 'Argentina'  aKms: 1500. 	tarifaEsperada := ((1500 "Kms" * 1.28 "tarifa destino nacional") - 1500 "Descuento por extranjero yendo a destino nacional").	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'Comodoro Rivadavia' en: 'Argentina').		self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test11ElViajeMasBaratoParaUnUsuarioArgentinoEntreDistintasOpcionesEsElNacional	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.		algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 3247.	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.	tarifaEsperada := ((2377 "Kms" * 1.28 "tarifa destino nacional") sqrt "Descuento por ley de impulso turismo nacional") * 1.2 "Impuesto al viaje para turistas nacionales".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Pablo'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'Ushuaia' en: 'Argentina').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test02ElViajeMasBaratoParaUnUsuarioExtranjeroHaciaUnDestinoDeSudamericaEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |		"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 3247.	tarifaEsperada := (3247 "Kms" raisedTo: 1.12 "tarifa de preembarco a destino mercosur") "No hay descuento de extranjero a viaje a sudamerica".	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'.		"Assert"	self assert: (viajeObtenido destinoEsperado) equals: (CiudadEsperada nombre: 'Cuzco' en: 'Peru').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test01ElViajeMasBaratoParaUnUsuarioExtranjeroEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |		"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.	tarifaEsperada := ((2377 "Kms" * 1.28 "tarifa destino nacional") - 1500 "Descuento por extranjero yendo a destino nacional").	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'Ushuaia' en: 'Argentina').		self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test04ElViajeMasBaratoParaUnUsuarioExtranjeroHaciaUnDestinoInternacionalEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.		tarifaEsperada := (10215 "Kms" log + 3600 "tarifa de preembarco con destino internacional")  "No hay descuento de extranjero a viaje internacional".	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".	"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'Lisboa' en: 'Portugal').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test13ElViajeMasCaroParaUnUsuarioArgentinoEntreDistintasOpcionesEsElSudamericano	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Maximo'.		algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 3247.	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.	tarifaEsperada := (3247 "Kms" raisedTo: 1.12 "tarifa de preembarco a destino mercosur") * 1.2 "Impuesto al viaje para turistas nacionales".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Pablo'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'Cuzco' en: 'Peru').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada	! !Class subclass: #CiudadEsperada	instanceVariableNames: 'nombre pais paisesMercosur'	classVariableNames: ''	package: 'TP1-Casos-De-Uso'!!CiudadEsperada methodsFor: 'acceso' stamp: 'liugutierrez 4/8/2023 11:47'!nombre	^ nombre! !!CiudadEsperada methodsFor: 'comparing' stamp: 'AV 4/5/2023 11:22'!establecerPais: unPais	pais := unPais.! !!CiudadEsperada methodsFor: 'comparing' stamp: 'AV 4/5/2023 11:21'!establecerNombre: unNombre	nombre := unNombre.! !!CiudadEsperada methodsFor: 'comparing' stamp: 'JG 4/5/2023 11:28'!= other	^nombre = (other nombre).! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CiudadEsperada class	instanceVariableNames: ''!!CiudadEsperada class methodsFor: 'as yet unclassified' stamp: 'AV 4/5/2023 11:21'!nombre: unNombre en: unPais | ciudadEsperada | 	ciudadEsperada := self new.	ciudadEsperada establecerNombre: unNombre. 	ciudadEsperada establecerPais: unPais.	^ ciudadEsperada ! !Error subclass: #CriterioInvalido	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Casos-De-Uso'!
TestCase subclass: #AlgoViajesTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Casos-De-Uso'!!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test13ElViajeMasCaroParaUnUsuarioArgentinoEntreDistintasOpcionesEsElSudamericano	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Maximo'.		algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 3247.	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.	tarifaEsperada := (3247 "Kms" raisedTo: 1.12 "tarifa de preembarco a destino mercosur") * 1.2 "Impuesto al viaje para turistas nacionales".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Pablo'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'Cuzco' en: 'Peru').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada	! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test09ElMismoViajeConDestinoSudamericanoResultaMasBaratoParaUnUsuarioArgentino	| algoViajes viajeCaro viajeBarato tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 3247.	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 3247.	tarifaEsperada := (3247 "Kms" raisedTo: 1.12 "tarifa de preembarco a destino mercosur") * 1.2 "Impuesto al viaje para turistas nacionales".		"Act"	viajeCaro := algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'.	viajeBarato :=  algoViajes viajeIndicadoSegunCriterioPara: 'Pablo'.		"Assert"	self assert: viajeBarato tarifa < viajeCaro tarifa.	self assert: (viajeBarato destinoEsperado)  equals: (CiudadEsperada nombre: 'Cuzco' en: 'Peru').	self assert: (viajeBarato tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'liugutierrez 4/19/2023 02:43'!test22RecibeUnPasajeroInexistenteLevantaExcepcion	| algoViajes viajeEsperado |		algoViajes := AlgoViaje conCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.		self shouldnt: [ viajeEsperado := algoViajes viajeIndicadoSegunCriterioPara: 'Maria'] raise: PasajeroInvalido.! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test19ElViajeMasCaroConDestinoNacionalParaUnUsuarioExtranjero	| algoViajes viajeCaro viajeBarato tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Maximo'.	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.	tarifaEsperada := ((2377 "Kms" * 1.28 "tarifa destino nacional") - 1500 "Descuento por extranjero yendo a destino nacional").	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".		"Act"		viajeBarato :=  algoViajes viajeIndicadoSegunCriterioPara: 'Pablo'.	viajeCaro := algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'.		"Assert"	self assert: viajeBarato tarifa < viajeCaro tarifa.	self assert: (viajeCaro destinoEsperado)  equals: (CiudadEsperada nombre: 'Ushuaia' en: 'Argentina').	self assert: (viajeCaro tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test18ElViajeMasCaroParaUnUsuarioArgentinoHaciaUnDestinoInternacionalEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Maximo'.	algoViajes registrarPasajePara: 'Diego' deNacionalidad: 'Argentina' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.	algoViajes registrarPasajePara: 'Diego' deNacionalidad: 'Argentina' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 1247.	tarifaEsperada := (10215 "Kms" log + 3600 "tarifa de preembarco con destino internacional") * 1.2 "Impuesto al viaje para turistas nacionales".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Diego'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'Lisboa' en: 'Portugal').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'liugutierrez 4/19/2023 02:27'!test20RecibeUnCriterioNoValido	| algoViaje |		self shouldnt: [ algoViaje := AlgoViaje conCriterio: 'Invalido' ] raise: CriterioInvalido.					! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test07ElViajeMasBaratoParaUnUsuarioArgentinoHaciaUnDestinoInternacionalEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Diego' deNacionalidad: 'Argentina' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.	tarifaEsperada := (10215 "Kms" log + 3600 "tarifa de preembarco con destino internacional") * 1.2 "Impuesto al viaje para turistas nacionales".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Diego'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'Lisboa' en: 'Portugal').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test06ElViajeMasBaratoParaUnUsuarioArgentinoHaciaUnDestinoDeSudamericaEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Diego' deNacionalidad: 'Argentina' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 3247.	tarifaEsperada := (3247 "Kms" raisedTo: 1.12 "tarifa de preembarco a destino mercosur") * 1.2 "Impuesto al viaje para turistas nacionales".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Diego'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'Cuzco' en: 'Peru').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test17ElViajeMasCaroParaUnUsuarioArgentinoHaciaUnDestinoDeSudamericaEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Maximo'.	algoViajes registrarPasajePara: 'Diego' deNacionalidad: 'Argentina' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 1377.	algoViajes registrarPasajePara: 'Diego' deNacionalidad: 'Argentina' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 3247.	tarifaEsperada := (3247 "Kms" raisedTo: 1.12 "tarifa de preembarco a destino mercosur") * 1.2 "Impuesto al viaje para turistas nacionales".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Diego'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'Cuzco' en: 'Peru').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test08ElMismoViajeConDestinoNacionalResultaMasBaratoParaUnUsuarioArgentino	| algoViajes viajeCaro viajeBarato tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.	tarifaEsperada := ((2377 "Kms" * 1.28 "tarifa destino nacional") sqrt "Descuento por ley de impulso turismo nacional") * 1.2 "Impuesto al viaje para turistas nacionales".		"Act"	viajeCaro := algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'.	viajeBarato :=  algoViajes viajeIndicadoSegunCriterioPara: 'Pablo'.		"Assert"	self assert: viajeBarato tarifa < viajeCaro tarifa.	self assert: (viajeBarato destinoEsperado)  equals: (CiudadEsperada nombre: 'Ushuaia' en: 'Argentina').	self assert: (viajeBarato tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test10ElMismoViajeConDestinoInternacionalResultaMasBaratoParaUnUsuarioNacional	| algoViajes viajeCaro viajeBarato tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.	tarifaEsperada := (10215 "Kms" log + 3600 "tarifa de preembarco con destino internacional")  *1.2 "Impuesto al viaje para turistas nacionales".		"Act"	viajeBarato := algoViajes viajeIndicadoSegunCriterioPara: 'Pablo'.	viajeCaro :=  algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'.		"Assert"	self assert: viajeBarato tarifa < viajeCaro tarifa.	self assert: (viajeBarato destinoEsperado)  equals: (CiudadEsperada nombre: 'Lisboa' en: 'Portugal').	self assert: (viajeBarato tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'liugutierrez 4/19/2023 02:32'!test21RecibeUnDestinoNegativoLevantaExcepcion		self shouldnt: [ Destino aCiudad: 'Ushuaia'  delPais: 'Argentina' aUnaDistancia: (-2377) ] raise: DistanciaInvalida.! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test16ElViajeMasCaroParaUnUsuarioExtranjeroHaciaUnDestinoInternacionalEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Maximo'.	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Munich' delPais: 'Alemania' aKms: 15215.	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.	tarifaEsperada := (15215 "Kms" log + 3600 "tarifa de preembarco con destino internacional")  "No hay descuento de extranjero a viaje internacional".	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".	"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'Munich' en: 'Alemania').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test05ElViajeMasBaratoParaUnUsuarioArgentinoEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.	tarifaEsperada := ((2377 "Kms" * 1.28 "tarifa destino nacional") sqrt "Descuento por ley de impulso turismo nacional") * 1.2 "Impuesto al viaje para turistas nacionales".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Pablo'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'Ushuaia' en: 'Argentina').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test12ElViajeMasBaratoParaUnUsuarioExtranjeroDadoUnDestinoSudamericanoYUnoInternacionalEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.		algoViajes registrarPasajePara: 'Joaquin' deNacionalidad: 'Española' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.	algoViajes registrarPasajePara: 'Joaquin' deNacionalidad: 'Española' conDestinoACiudad: 'Cusco' delPais: 'Peru' aKms: 3236.	tarifaEsperada := (10215 "Kms" log + 3600 "tarifa de preembarco con destino internacional")  "No hay descuento de extranjero a viaje internacional".	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Joaquin'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'Lisboa' en: 'Portugal').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada	! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test14ElViajeMasCaroParaUnUsuarioExtranjeroDadoUnDestinoSudamericanoYUnoNacionalEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Maximo'.	algoViajes registrarPasajePara: 'Joaquin' deNacionalidad: 'Española' conDestinoACiudad: 'San Carlos de Bariloche' delPais: 'Argentina' aKms: 1578.	algoViajes registrarPasajePara: 'Joaquin' deNacionalidad: 'Española' conDestinoACiudad: 'Cusco' delPais: 'Peru' aKms: 3247.	tarifaEsperada := (3247 "Kms" raisedTo: 1.12 "tarifa de preembarco a destino mercosur") "No hay descuento de extranjero a viaje a sudamerica".	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Joaquin'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'Cusco' en: 'Peru').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada.	! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test11ElViajeMasBaratoParaUnUsuarioArgentinoEntreDistintasOpcionesEsElNacional	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.		algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 3247.	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.	tarifaEsperada := ((2377 "Kms" * 1.28 "tarifa destino nacional") sqrt "Descuento por ley de impulso turismo nacional") * 1.2 "Impuesto al viaje para turistas nacionales".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Pablo'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'Ushuaia' en: 'Argentina').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test15ElViajeMasCaroParaUnUsuarioExtranjeroEnTerritorioNacional	| algoViajes viajeObtenido tarifaEsperada |		"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana'  conDestinoACiudad: 'Comodoro Rivadavia' delPais: 'Argentina'  aKms: 1500. 	tarifaEsperada := ((1500 "Kms" * 1.28 "tarifa destino nacional") - 1500 "Descuento por extranjero yendo a destino nacional").	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'Comodoro Rivadavia' en: 'Argentina').		self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test02ElViajeMasBaratoParaUnUsuarioExtranjeroHaciaUnDestinoDeSudamericaEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |		"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 3247.	tarifaEsperada := (3247 "Kms" raisedTo: 1.12 "tarifa de preembarco a destino mercosur") "No hay descuento de extranjero a viaje a sudamerica".	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'.		"Assert"	self assert: (viajeObtenido destinoEsperado) equals: (CiudadEsperada nombre: 'Cuzco' en: 'Peru').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'liugutierrez 4/19/2023 09:52'!test23ElViajeMasCaroConDestinoInternacionalParaUnUsuarioExtranjero	| algoViajes viajeCaro viajeBarato tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Maximo'.	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Roma' delPais: 'Italia' aKms: 22377.	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Roma' delPais: 'Italia' aKms: 22377.	tarifaEsperada := (22377 "Kms" log + 3600 "tarifa de preembarco con destino internacional")  "No hay descuento de extranjero a viaje internacional".	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".		"Act"		viajeBarato :=  algoViajes viajeIndicadoSegunCriterioPara: 'Pablo'.	viajeCaro := algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'.		"Assert"	self assert: viajeBarato tarifa < viajeCaro tarifa.	self assert: (viajeCaro destinoEsperado)  equals: (CiudadEsperada nombre: 'Roma' en: 'Italia').	self assert: (viajeCaro tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test01ElViajeMasBaratoParaUnUsuarioExtranjeroEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |		"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.	tarifaEsperada := ((2377 "Kms" * 1.28 "tarifa destino nacional") - 1500 "Descuento por extranjero yendo a destino nacional").	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'Ushuaia' en: 'Argentina').		self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test04ElViajeMasBaratoParaUnUsuarioExtranjeroHaciaUnDestinoInternacionalEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.		tarifaEsperada := (10215 "Kms" log + 3600 "tarifa de preembarco con destino internacional")  "No hay descuento de extranjero a viaje internacional".	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".	"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'Lisboa' en: 'Portugal').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajesTest methodsFor: 'tests' stamp: 'lvg 4/17/2023 21:26'!test03ElViajeMasBaratoParaUnUsuarioExtranjeroDadoUnDestinoSudamericanoYUnoNacionalEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViaje conCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Joaquin' deNacionalidad: 'Española' conDestinoACiudad: 'San Carlos de Bariloche' delPais: 'Argentina' aKms: 1578.	algoViajes registrarPasajePara: 'Joaquin' deNacionalidad: 'Española' conDestinoACiudad: 'Cusco' delPais: 'Peru' aKms: 3236.	tarifaEsperada := ((1578 "Kms" * 1.28 "tarifa destino nacional") - 1500 "Descuento por extranjero yendo a destino nacional"). 	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".		"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Joaquin'.		"Assert"	self assert: (viajeObtenido destinoEsperado)  equals: (CiudadEsperada nombre: 'San Carlos de Bariloche' en: 'Argentina').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada	! !Class subclass: #CiudadEsperada	instanceVariableNames: 'nombre pais paisesMercosur'	classVariableNames: ''	package: 'TP1-Casos-De-Uso'!!CiudadEsperada methodsFor: 'accessing' stamp: 'liugutierrez 4/19/2023 08:37'!nombre	^nombre  ! !!CiudadEsperada methodsFor: 'comparing' stamp: 'AV 4/5/2023 11:22'!establecerPais: unPais	pais := unPais.! !!CiudadEsperada methodsFor: 'comparing' stamp: 'AV 4/5/2023 11:21'!establecerNombre: unNombre	nombre := unNombre.! !!CiudadEsperada methodsFor: 'comparing' stamp: 'liugutierrez 4/19/2023 01:53'!= other	^nombre = (other nombre).! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CiudadEsperada class	instanceVariableNames: ''!!CiudadEsperada class methodsFor: 'not defined category' stamp: 'liugutierrez 4/19/2023 08:39'!nombre: unNombre en: unPais | ciudadEsperada | 	ciudadEsperada := self new.	ciudadEsperada establecerNombre: unNombre. 	ciudadEsperada establecerPais: unPais.	ciudadEsperada ! !Error subclass: #CriterioInvalido	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Casos-De-Uso'!TestCase subclass: #DestinoTest	instanceVariableNames: 'ciudadEsperada tarifa tarifaEsperada destinoInternacional destinoNacional pasajeroArgentino destinoMercosur pasajeroExtranjeroAlejo pasajeroArgentinoPablo'	classVariableNames: ''	package: 'TP1-Casos-De-Uso'!!DestinoTest methodsFor: 'asserts' stamp: 'lvg 4/18/2023 00:50'!assertQueEldestino: unaCiudadEsperada seaIgualA: unaCiudadEsperadaResultante yLaTarifaSea: unaTarifa igualA: unaTarifaCalculada 		self assert: unaCiudadEsperada   equals: unaCiudadEsperadaResultante.	self assert: unaTarifa  equals: unaTarifaCalculada.! !!DestinoTest methodsFor: 'tests' stamp: 'lvg 4/18/2023 00:40'!test04ParaDestinoNacionalConPasajeroArgentino	tarifaEsperada := ((2377 "Kms" * 1.28 "tarifa destino nacional") sqrt "Descuento por ley de impulso turismo nacional") * 1.2 "Impuesto al viaje para turistas nacionales".		"Act"		ciudadEsperada :=  destinoNacional destinoEsperado.	tarifa := destinoNacional calcularTarifaEnBaseA: pasajeroArgentinoPablo.		"Assert"	self assert: (ciudadEsperada)  equals: (CiudadEsperada nombre: 'Ushuaia' en: 'Argentina').	self assert: (tarifa) equals: tarifaEsperada! !!DestinoTest methodsFor: 'tests' stamp: 'lvg 4/18/2023 00:48'!test06ParaDestinoMercosurConPasajeroArgentino	tarifaEsperada := (3247 "Kms" raisedTo: 1.12 "tarifa de preembarco a destino mercosur") * 1.2 "Impuesto al viaje para turistas nacionales".		"Act"		ciudadEsperada :=  destinoMercosur destinoEsperado.	tarifa := destinoMercosur calcularTarifaEnBaseA: pasajeroArgentinoPablo.		"Assert"		self		assertQueEldestino: ciudadEsperada seaIgualA:(CiudadEsperada nombre: 'Cuzco' en: 'Peru') 		yLaTarifaSea: tarifa igualA: tarifaEsperada.! !!DestinoTest methodsFor: 'tests' stamp: 'liugutierrez 4/19/2023 10:11'!test02ParaDestinoInternacionalConPasajeroExtranjero	tarifaEsperada := (10215 "Kms" log + 3600 "tarifa de preembarco con destino internacional")  "No hay descuento de extranjero a viaje internacional".	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".		"Act"		ciudadEsperada :=  destinoInternacional destinoEsperado.	tarifa := destinoInternacional calcularTarifaEnBaseA: pasajeroExtranjeroAlejo.		"Assert"	self assert: (ciudadEsperada)  equals: (CiudadEsperada nombre: 'Lisboa' en: 'Portugal').	self assert: (tarifa) equals: tarifaEsperada! !!DestinoTest methodsFor: 'tests' stamp: 'lvg 4/18/2023 00:37'!test02ParaDestinoMercosurConPasajeroExtranjero	tarifaEsperada := (3247 "Kms" raisedTo: 1.12 "tarifa de preembarco a destino mercosur") "No hay descuento de extranjero a viaje a sudamerica".	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".		"Act"		ciudadEsperada :=  destinoMercosur destinoEsperado.	tarifa := destinoMercosur calcularTarifaEnBaseA: pasajeroExtranjeroAlejo.		"Assert"	self assert: (ciudadEsperada)  equals: (CiudadEsperada nombre: 'Cuzco' en: 'Peru').	self assert: (tarifa) equals: tarifaEsperada! !!DestinoTest methodsFor: 'tests' stamp: 'lvg 4/18/2023 00:41'!test05ParaDestinoInternacionalConPasajeroArgentino	tarifaEsperada := (10215 "Kms" log + 3600 "tarifa de preembarco con destino internacional") * 1.2 "Impuesto al viaje para turistas nacionales".		"Act"		ciudadEsperada :=  destinoInternacional destinoEsperado.	tarifa := destinoInternacional calcularTarifaEnBaseA: pasajeroArgentinoPablo.		"Assert"	self assert: (ciudadEsperada)  equals: (CiudadEsperada nombre: 'Lisboa' en: 'Portugal').	self assert: (tarifa) equals: tarifaEsperada! !!DestinoTest methodsFor: 'tests' stamp: 'lvg 4/18/2023 00:37'!test01ParaDestinoNacionalConPasajeroExtranjero	tarifaEsperada := ((2377 "Kms" * 1.28 "tarifa destino nacional") - 1500 "Descuento por extranjero yendo a destino nacional").	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".		"Act"		ciudadEsperada :=  destinoNacional destinoEsperado.	tarifa := destinoNacional calcularTarifaEnBaseA: pasajeroExtranjeroAlejo.		"Assert"	self assert: (ciudadEsperada)  equals: (CiudadEsperada nombre: 'Ushuaia' en: 'Argentina').	self assert: (tarifa) equals: tarifaEsperada! !!DestinoTest methodsFor: 'initialization' stamp: 'lvg 4/18/2023 00:39'!setUp 	tarifaEsperada := 0.	destinoNacional  := Destino aCiudad: 'Ushuaia' delPais: 'Argentina' aUnaDistancia: 2377.	destinoInternacional := Destino aCiudad: 'Lisboa' delPais: 'Portugal'  aUnaDistancia: 10215.	destinoMercosur := Destino aCiudad: 'Cuzco' delPais: 'Peru' aUnaDistancia: 3247.	pasajeroExtranjeroAlejo := Pasajero con: 'Alejo'  de: 'Italiana'.	pasajeroArgentinoPablo := Pasajero con: 'Pablo' de: 'Argentina'.! !Error subclass: #DistanciaInvalida	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Casos-De-Uso'!Error subclass: #PasajeroInvalido	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Casos-De-Uso'!TestCase subclass: #PasajeroTest	instanceVariableNames: 'tarifaEsperada destinoNacional destinoInternacional destinoMercosur pasajeroExtranjeroAlejo pasajeroArgentinoPablo'	classVariableNames: ''	package: 'TP1-Casos-De-Uso'!!PasajeroTest methodsFor: 'tests' stamp: 'lvg 4/19/2023 11:41'!test01PasajeroExtranjero	| ciudadEsperada tarifa |	tarifaEsperada := (10215 "Kms" log + 3600 "tarifa de preembarco con destino internacional")  "No hay descuento de extranjero a viaje internacional".	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".		"Act"		ciudadEsperada :=  destinoInternacional destinoEsperado.	tarifa := destinoInternacional calcularTarifaEnBaseA: pasajeroExtranjeroAlejo.		"Assert"	self assert: (ciudadEsperada)  equals: (CiudadEsperada nombre: 'Lisboa' en: 'Portugal').	self assert: (tarifa) equals: tarifaEsperada! !!PasajeroTest methodsFor: 'initialization' stamp: 'lvg 4/19/2023 11:39'!setUp 	tarifaEsperada := 0.	destinoNacional  := Destino aCiudad: 'Ushuaia' delPais: 'Argentina' aUnaDistancia: 2377.	destinoInternacional := Destino aCiudad: 'Lisboa' delPais: 'Portugal'  aUnaDistancia: 10215.	destinoMercosur := Destino aCiudad: 'Cuzco' delPais: 'Peru' aUnaDistancia: 3247.	pasajeroExtranjeroAlejo := Pasajero con: 'Alejo'  de: 'Italiana'.	pasajeroArgentinoPablo := Pasajero con: 'Pablo' de: 'Argentina'.! !